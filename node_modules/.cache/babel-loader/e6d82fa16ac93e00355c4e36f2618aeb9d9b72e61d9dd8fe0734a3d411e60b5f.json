{"ast":null,"code":"var _jsxFileName = \"/Users/chukwumaibezim/dev/NetflixClone/src/features/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Row.css';\nimport axios from \"./axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow = false\n}) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => (isLargeRow && movie.poster_path || !isLargeRow && movie.poster_path) && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(Row, \"+jZiGaK1IrFkDFSplSYv9W7La4s=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Row","title","fetchUrl","isLargeRow","_s","movies","setMovies","base_url","fetchData","request","get","data","results","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","poster_path","src","backdrop_path","alt","name","id","_c","$RefreshReg$"],"sources":["/Users/chukwumaibezim/dev/NetflixClone/src/features/Row.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './Row.css'\nimport axios from \"./axios\"\n\nfunction Row({title , fetchUrl, isLargeRow = false}) {\n    const [movies,setMovies] = useState([]);\n\n    const base_url= \"https://image.tmdb.org/t/p/original/\";\n\n    useEffect(() => {\n        async function fetchData(){\n            const request = await axios.get(fetchUrl)\n            setMovies(request.data.results);\n            return request;\n        }\n\n        fetchData();\n    }, [fetchUrl]);\n\n    console.log(movies)\n\n    return (\n        <div className=\"row\">\n            <h2>{title}</h2>\n\n            <div className=\"row__posters\">\n                {movies.map((movie) => (\n                    ((isLargeRow && movie.poster_path) ||\n                        (!isLargeRow && movie.poster_path)) && (\n                        <img\n                            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                            key={movie.id}\n                            src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path\n                            }`}\n                            alt={movie.name}\n                        />\n                    )\n\n\n                ))}\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Row"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,GAAGA,CAAC;EAACC,KAAK;EAAGC,QAAQ;EAAEC,UAAU,GAAG;AAAK,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEvC,MAAMW,QAAQ,GAAE,sCAAsC;EAEtDZ,SAAS,CAAC,MAAM;IACZ,eAAea,SAASA,CAAA,EAAE;MACtB,MAAMC,OAAO,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAACR,QAAQ,CAAC;MACzCI,SAAS,CAACG,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;MAC/B,OAAOH,OAAO;IAClB;IAEAD,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEdW,OAAO,CAACC,GAAG,CAACT,MAAM,CAAC;EAEnB,oBACIN,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBjB,OAAA;MAAAiB,QAAA,EAAKf;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEhBrB,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAC,QAAA,EACxBX,MAAM,CAACgB,GAAG,CAAEC,KAAK,IACd,CAAEnB,UAAU,IAAImB,KAAK,CAACC,WAAW,IAC5B,CAACpB,UAAU,IAAImB,KAAK,CAACC,WAAY,kBAClCxB,OAAA;QACIgB,SAAS,EAAG,eAAcZ,UAAU,IAAI,kBAAmB,EAAE;QAE7DqB,GAAG,EAAG,GAAEjB,QAAS,GAAEJ,UAAU,GAAGmB,KAAK,CAACC,WAAW,GAAGD,KAAK,CAACG,aACzD,EAAE;QACHC,GAAG,EAAEJ,KAAK,CAACK;MAAK,GAHXL,KAAK,CAACM,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIhB,CAIR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd;AAAChB,EAAA,CAzCQJ,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA2CZ,eAAeA,GAAG;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}